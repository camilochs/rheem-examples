# Here go the learned cost functions...
rheem.java.reduceby.load = {\
 "in":1,\
 "out":1,\
 "cpu":"${0.9691075617570686*in0 + 179.58079684227764*out0 + 23.652186277726912}",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.localcallbacksink.load = {\
 "in":1,\
 "out":0,\
 "cpu":"${10.662676041238914*in0 + 698273.3774416123}",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.textfilesource.load = {\
 "in":0,\
 "out":1,\
 "cpu":"${6.706230156985611*out0 + 116946.86108530796}",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.filter.load = {\
 "in":1,\
 "out":1,\
 "cpu":"${1.8101285013854862*in0 + 0.10522799511388539*out0 + 174508.14960646234}",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.map.load = {\
 "in":1,\
 "out":1,\
 "cpu":"${3.786263829086864*in0 + 712651.7791312812}",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}
rheem.java.flatmap.load = {\
 "in":1,\
 "out":1,\
 "cpu":"${7.6590772571940064*in0 + 3.1164436836959934*out0 + 464218.1441863766}",\
 "ram":"0",\
 "disk":"0",\
 "net":"0",\
 "p":0.9\
}